/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../../../src/app/store/module';
import * as import2 from '../../../../../src/app/store/common';
import * as import3 from '../../../../../src/app/store/store';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
class StoreModuleInjector extends import0.NgModuleInjector<import1.StoreModule> {
  _StoreModule_0:import1.StoreModule;
  __Dispatcher_1:import2.Dispatcher;
  __Store_2:import3.Store;
  __LOCALE_ID_3:any;
  __TRANSLATIONS_FORMAT_4:any;
  constructor(parent:import4.Injector) {
    super(parent,[],[]);
  }
  get _Dispatcher_1():import2.Dispatcher {
    if ((this.__Dispatcher_1 == (null as any))) { (this.__Dispatcher_1 = new import2.Dispatcher()); }
    return this.__Dispatcher_1;
  }
  get _Store_2():import3.Store {
    if ((this.__Store_2 == (null as any))) { (this.__Store_2 = new import3.Store(this._Dispatcher_1)); }
    return this.__Store_2;
  }
  get _LOCALE_ID_3():any {
    if ((this.__LOCALE_ID_3 == (null as any))) { (this.__LOCALE_ID_3 = (null as any)); }
    return this.__LOCALE_ID_3;
  }
  get _TRANSLATIONS_FORMAT_4():any {
    if ((this.__TRANSLATIONS_FORMAT_4 == (null as any))) { (this.__TRANSLATIONS_FORMAT_4 = (null as any)); }
    return this.__TRANSLATIONS_FORMAT_4;
  }
  createInternal():import1.StoreModule {
    this._StoreModule_0 = new import1.StoreModule();
    return this._StoreModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.StoreModule)) { return this._StoreModule_0; }
    if ((token === import2.Dispatcher)) { return this._Dispatcher_1; }
    if ((token === import3.Store)) { return this._Store_2; }
    if ((token === import5.LOCALE_ID)) { return this._LOCALE_ID_3; }
    if ((token === import5.TRANSLATIONS_FORMAT)) { return this._TRANSLATIONS_FORMAT_4; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const StoreModuleNgFactory:import0.NgModuleFactory<import1.StoreModule> = new import0.NgModuleFactory(StoreModuleInjector,import1.StoreModule);